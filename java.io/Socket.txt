1.
   网络编程的基本模型是Client/Server模型，也就是两个进程之间进行相互通信，其中服务端提供位置信息（绑定的IP地址和监听端口），
   客户端通过连接操作向服务端监听的地址发起连接请求，通过三次握手建立连接，如果连接建立成功，双方就可以通过网络套接字（Socket）进行通信。

2. ServerSocket负责绑定IP地址, 启动监听端口, Socket负责发起连接操作; 连接成功后, 通过Channel进行通信.

3. 一个Acceptor线程负责监听客户端的连接.

4. ServerSocket: 端口合法且没有被占用, 服务端监听成功.

5. socket编程有2种协议可以选择:

1) 数据报通信(UDP): 无连接协议, 意味着: 我们每次发送数据报时, 同时需要发送本机和接受机的socket描述符.[额外数据]

2) 流通性(TCP): 基于连接的协议.

6.
使用Socket进行网络通信的过程
　　服务器程序将一个套接字绑定到一个特定的端口，并通过此套接字等待和监听客户的连接请求。

　　客户程序根据服务器程序所在的主机名和端口号发出连接请求。

7. Socket:

    (1)建立Socket连接

　　(2)获得输入/输出流

　　(3)读/写数据

　　(4)关闭输入/输出流

　　(5)关闭Socket

8. TCP和UDP

1) TCP保证数据正确性，UDP可能丢包
2) TCP保证数据顺序，UDP不保证

9.
