1. java代码编译到执行的过程:
   源码编译机制;
   类加载机制;
   类执行机制.

2. 编译: javac将java文件编译成class文件的过程. [编译原理部分]

3. 加载:
1) 装载(load): 类的全限定义名 + 装载器(ClassLoader实例). ===>>> 装载过程负责找到二进制字节码并加载到jvm中.
  特殊说明:
    对于接口式非数组型的类，其名称即为类名，此种类型的类由所在的ClassLoader负责加载;
    数组型类中的元素类型由所在的ClassLoader负责加载，但数组类则由JVM直接创建.
2) 链接(link): 对二进制码的格式进行校验, 初始化类中华的静态变量和解析类中调用的接口、类.
3) 初始化(initialize): 执行类中的静态初始化代码块, 构造器代码及静态属性的初始化.
   四种情况下初始化过程会被触发执行：
      调用了new + 通过class.forName()动态加载.
      反射调用了类中的方法
      子类调用了初始化
      JVM启动过程中指定的初始化类

JVM的类加载通过ClassLoader及其子类来完成.

4. 执行：
   源码编译为JVM字节码，JVM字节码是一种中间代码的方式，要由JVM在运行期对其进行解释并执行. [字节码解释执行]

1) 解释执行

2) 编译执行: 即时[Just-In-Time]编译器

Sun JDK在执行过程中对执行频率高的代码进行编译，对执行不频繁的代码则继续采用解释的方式.

5. 
