1. 设计模式: 是一套代码设计的经验总结, 针对特定问题.

2. 使代码更加优雅,易理解.

3. 设计原则:
    面向接口编程: 细节应该依赖于抽象.
    合成复用: 组合类,不单单是继承.

4. 设计模式[23]:

单例模式:  保证一个类仅有一个实例，并提供一个全局访问点.
          1) 初始化时即创建单例
          2) 按需、延迟创建单例

简单工厂模式:   [生产对象的类]  静态方法模式[因为工厂类定义了一个静态方法]
   外界通过调用工厂类的静态方法,传入不同的参数从而创建不同的实例
   工厂类增加分支

工厂模式 +  抽象工厂模式

策略模式: [Strategy]

适配器模式:  类的适配器模式 +  对象的适配器模式

原型模式:  可以通过一个原型对象克隆出多个一模一样的对象. [java提供的clone接口]
