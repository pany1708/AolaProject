1. AOP是Aspect Oriented Programming 【面向切面编程】 【编程范式】
   1) 在运行时, 动态的将代码切入到类的指定方法, 指定位置上的编程思想;
   2) OOP的封装: 将功能分散到不同的对象[职责分配]

   ===>>> 不同层面上的代码复用

   3) 管切入到指定类指定方法的代码片段称为切面, 而切入到哪些类、哪些方法则叫切入点.
      有了AOP，我们就可以把几个类共有的代码，抽取到一个切片中，等到需要时再切入对象中去，从而改变其原有的行为。

   4) 对原有代码毫无侵入性, 把和主业务无关的事情放在代码外面去做.

2. 作用:
   1) 监控函数的调用;
   2) 捕获异常发生.

3. 实现方式:
   1) JDK提供的动态代理实现;

4. 静态代理和动态代理:
   1) 自己实现代理对象.
   2) 在运行时,生成一个代理对象.

5. 本质是元编程: 用反射或者一些编译技术在指定的方法前后插入一些其它代码.

6. Aspect: 切面.

7. 
