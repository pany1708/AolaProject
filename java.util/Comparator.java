Comparable与Comparator的区别:  【两种比较机制】
1. Comparable 是排序接口；若一个类实现了 Comparable 接口，就意味着 “该类支持排序”。  【自然顺序】
   Comparator 是比较器；我们若需要控制某个类的次序，可以建立一个 “该类的比较器” 来进行排序。 【最小的值】

   前者应该比较固定，和一个具体类相绑定，而后者比较灵活，它可以被用于各个需要比较功能的类使用。可以说前者属于 “静态绑定”，
   而后者可以 “动态绑定”。

2. Comparable 相当于 “内部比较器”，而 Comparator 相当于 “外部比较器”。

3. Comparable 自然排序。（实体类实现）
   Comparator 是定制排序。（无法修改实体类时，直接在调用方创建）

4. 系统类实现了Comparable,可以直接排序
   自定义类用Comparator定制排序

========================================================================================================================
Comparator:
1. 比较器接口（策略设计模式）

2. 函数式接口, int compare(T o1, T o2);


========================================================================================================================
Comparable
1. Comparable 接口强行对实现它的每个类的对象进行整体排序。 -- 自然排序。类的compareTo称为自然比较方法。

2. 实现这个接口的类本身支持排序,

3. public int compareTo(T o);
